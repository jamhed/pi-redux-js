// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["a/Pi", "a/Promise"], function(P, Promise) {
  var aForm, _ref;
  return aForm = (function(_super) {
    __extends(aForm, _super);

    function aForm() {
      _ref = aForm.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    aForm.prototype.attr = function() {
      return aForm.__super__.attr.apply(this, arguments).concat(["uri", "target"]);
    };

    aForm.prototype.serialize = function(inputs) {
      var ret, _fn, _i, _j, _len,
        _this = this;
      ret = {};
      _fn = function(i) {
        var group, item_val, tmp;
        group = i.data("group") || "form";
        if (!ret[group]) {
          ret[group] = [];
        }
        if (i.attr("type") === "checkbox") {
          if (i.prop("checked")) {
            return ret[group].push({
              name: i.attr("name"),
              value: true,
              "class": i.attr("class")
            });
          } else {
            return ret[group].push({
              name: i.attr("name"),
              value: false,
              "class": i.attr("class")
            });
          }
        } else if (i.attr("type") === "radio") {
          if (i.prop("checked")) {
            return ret[group].push({
              name: i.attr("name"),
              value: i.attr("value"),
              "class": i.attr("class")
            });
          }
        } else if (i.attr("processed")) {
          tmp = _this.rpc_el(i, "get", [], function(r) {
            return r;
          });
          return ret[group].push(tmp);
        } else {
          tmp = i.serializeArray();
          if (i.attr("item_map")) {
            item_val = i.attr("item_val");
            ret[group].push({
              name: i.attr("item_map"),
              "class": i.attr("class"),
              value: item_val === "null" ? null : item_val
            });
          }
          return ret[group].push(tmp[0]);
        }
      };
      for (_j = 0, _len = inputs.length; _j < _len; _j++) {
        _i = inputs[_j];
        _fn($(_i));
      }
      return ret;
    };

    aForm.prototype.deserialize = function(inputs, data) {
      var d, hdata, _i, _j, _len, _len1, _results;
      hdata = {};
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        d = data[_i];
        hdata[d.name] = d;
      }
      _results = [];
      for (_j = 0, _len1 = inputs.length; _j < _len1; _j++) {
        _i = inputs[_j];
        _results.push((function(i) {
          var f;
          if (i.attr("type") === "checkbox" && hdata[i.attr("name")]) {
            return i.attr("checked", 1);
          } else {
            if (f = hdata[i.attr("name")]) {
              i.val(f.value);
              if (f["item_val"]) {
                return i.attr("item_val", f["item_val"]);
              }
            }
          }
        })($(_i)));
      }
      return _results;
    };

    aForm.prototype.send = function(a) {
      var data,
        _this = this;
      data = this.serialize($(a.selector));
      return this.ppost(this.a.uri, data).then(function(r) {
        if (_this.a.target) {
          _this.rpc(_this.a.target, r);
        }
        if (a.target) {
          _this.rpc(a.target, r);
        }
        return r;
      });
    };

    return aForm;

  })(P);
});
