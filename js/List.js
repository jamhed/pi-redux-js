// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["pi/Pi"], function(P) {
  var piList, _ref;
  return piList = (function(_super) {
    __extends(piList, _super);

    function piList() {
      _ref = piList.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    piList.prototype.attr = function() {
      return piList.__super__.attr.apply(this, arguments).concat(["uri", "row", "current", "name"]);
    };

    piList.prototype.init = function() {
      if (!this.a.uri) {
        return this.debug("no uri attr", this.e[0]);
      }
      if (!this.a.row) {
        return this.debug("no row attr", this.e[0]);
      }
      return this.load();
    };

    piList.prototype.get = function() {
      return {
        name: this.a.name,
        value: this.e.val()
      };
    };

    piList.prototype.load = function(data) {
      var _this = this;
      if (data == null) {
        data = this.data;
      }
      return this.post(this.a.uri, data, function(r) {
        return _this.onData(r);
      });
    };

    piList.prototype.onData = function(r) {
      var row, row_tmpl, _i, _len, _ref1;
      this.r = r;
      row_tmpl = this.rt.source(this.a.row);
      this.e.empty();
      _ref1 = r.rr;
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        row = _ref1[_i];
        this.e.append(row_tmpl({
          o: row,
          current: this.a.current
        }));
      }
      return this.rt.pi(this.e);
    };

    return piList;

  })(P);
});
