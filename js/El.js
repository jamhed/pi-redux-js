// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["pi/Pi", "pi/lib/URI/URI"], function(aPi, URI) {
  var aEl, _ref;
  return aEl = (function(_super) {
    __extends(aEl, _super);

    function aEl() {
      _ref = aEl.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    aEl.prototype.uri = null;

    aEl.prototype.text = null;

    aEl.prototype.attr = function() {
      return aEl.__super__.attr.apply(this, arguments).concat(["uri", "get"]);
    };

    aEl.prototype.init = function() {
      this.uri = URI("#" + this.a.uri);
      return this.load();
    };

    aEl.prototype.load = function() {
      var _this = this;
      if (this.a.uri === void 0) {
        return this.set(this.e.html());
      }
      if (this.a.get === "" || this.a.get) {
        return $.get(this.uri.fragment(), this.uri.query(), function(text) {
          return _this.set(text);
        });
      } else {
        return this.post(this.uri.fragment(), {}, function(text) {
          return _this.set(text);
        });
      }
    };

    aEl.prototype.set = function(text) {
      this.text = text;
      this.e.html(this.text);
      return this.rt.pi(this.e);
    };

    return aEl;

  })(aPi);
});
