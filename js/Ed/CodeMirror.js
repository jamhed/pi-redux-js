// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["a/Pi", "lib/codemirror/lib/codemirror"], function(P, aCodeMirror) {
  var EdCodeMirror, _ref;
  return EdCodeMirror = (function(_super) {
    __extends(EdCodeMirror, _super);

    function EdCodeMirror() {
      _ref = EdCodeMirror.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    EdCodeMirror.prototype.text = "";

    EdCodeMirror.prototype.editor = null;

    EdCodeMirror.prototype.state = null;

    EdCodeMirror.prototype.attr = function() {
      return EdCodeMirror.__super__.attr.apply(this, arguments).concat(["name", "height", "save", "change"]);
    };

    EdCodeMirror.prototype.init = function() {
      var _this = this;
      this.sub("preview", function() {
        return _this.preview();
      });
      this.sub("edit", function() {
        return _this.edit();
      });
      if (!this.a.name) {
        this.a.name = "content";
      }
      if (!this.a.height) {
        this.a.height = 20;
      }
      this.text = this.e.html();
      this.edit();
      return this.e.css("visibility", "visible");
    };

    EdCodeMirror.prototype.get = function() {
      return {
        name: this.a.name,
        value: this.editor.getValue()
      };
    };

    EdCodeMirror.prototype.flip = function() {
      if (this.state === "preview") {
        this.edit();
      } else {
        this.preview();
      }
      return this.state;
    };

    EdCodeMirror.prototype.process = function(text) {
      this.e.html(text);
      return this.rt.pi(this.e);
    };

    EdCodeMirror.prototype.preview = function() {
      this.state = "preview";
      this.e.empty();
      this.text = this.get().value;
      return this.process(this.text);
    };

    EdCodeMirror.prototype.edit = function() {
      var line_h,
        _this = this;
      this.state = "edit";
      this.e.empty();
      this.editor = new aCodeMirror(this.e[0], {
        value: this.text,
        mode: this.a.mode,
        lineNumbers: true,
        extraKeys: {
          "Ctrl-S": function(i) {
            if (_this.a.save) {
              _this.rpc(_this.a.save, [_this.data]);
            }
            return false;
          }
        }
      });
      this.editor.on("change", function(ev) {
        if (_this.a.change) {
          return _this.rpc(_this.a.change, {});
        }
      });
      line_h = this.editor.defaultTextHeight();
      return $(".CodeMirror", this.e).css("height", (this.a.height + 1) * line_h);
    };

    return EdCodeMirror;

  })(P);
});
